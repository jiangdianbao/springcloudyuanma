spring.application.name=springcloudeurekaclient2
server.port=8085
## eureka
#是否注册到eureka
eureka.client.registerWithEureka=true
#是否从eureka中拉取注册信息
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http\://localhost\:8763/eureka/
#是否讲ip注册到倒eureka
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
#服务续约，心跳的时间间隔
eureka.instance.lease-renewal-interval-in-seconds=30
#如果从前一次发送心跳时间起，90秒没接受到新的心跳，讲剔除服务
eureka.instance.lease-expiration-duration-in-seconds=90
#表示eureka client间隔多久去拉取服务注册信息，默认为30秒
eureka.client.registry-fetch-interval-seconds=30
#点对点直连测试配置
# 关闭 ribbon 访问注册中心 Eureka Server 发现服务，但是服务依旧会注 册。
#true 使用 eureka false 不使用
ribbon.eureka.enabled=true
spring.cloud.loadbalancer.retry.enabled=true
#ribbon配置的时候可以指定单个的client配置,就是加上要调用的client的前缀,然后就是调用这个client自己的配置,意味着你要是调用多个client,你可以分开来配置,只要前面client名称不一致就行
#要是配置没有前面的client名称,那么这个配置就是所有要调用的client的配置,就是一个全量的配置.但是单个的你也配置了,那么单个的会覆盖全量的.
#指定调用的节点 可以关闭自己上面的ribbon.eureka.enabled配置,然后自己配置文件列表
#micro-order.ribbon.listOfServers=localhost:8001
#单位 ms ,请求连接超时时间
springcloudeurekaclient.ribbon.ConnectTimeout=1000
#单位 ms ,请求处理的超时时间
springcloudeurekaclient.ribbon.ReadTimeout=2000
#是否重试次数到了的时候,切换服务器重试
springcloudeurekaclient.ribbon.OkToRetryOnAllOperations=true
#切换实例的重试次数
springcloudeurekaclient.ribbon.MaxAutoRetriesNextServer=2
#对当前实例的重试次数 当 Eureka 中可以找到服务，但是服务连不上时将会 重试
springcloudeurekaclient.ribbon.MaxAutoRetries=2
#这个要分注意大小写,直接用大写没有错,我的天还有这个说法头大了
SPRINGCLOUDEUREKACLIENT.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
SPRINGCLOUDEUREKACLIENT.ribbon.NFLoadBalancerPingClassName=com.netflix.loadbalancer.PingUrl